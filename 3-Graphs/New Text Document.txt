     function sysCall_init()
    corout=coroutine.create(coroutineMain)
end

function sysCall_actuation()
    if coroutine.status(corout)~='dead' then
        local ok,errorMsg=coroutine.resume(corout)
        if errorMsg then
            error(debug.traceback(corout,errorMsg),2)
        end
    end
end

setLeds=function(elHandle,left,middle,right)
    simUI.setCheckboxValue(ui,1,not left and 0 or 2)
    simUI.setCheckboxValue(ui,2,not middle and 0 or 2)
    simUI.setCheckboxValue(ui,3,not right and 0 or 2)
end

function sysCall_cleanup()
    -- do some clean-up here
end

function matmul()
    -- -3.8120e+03   2.0763e-15  -7.7162e+02  -5.9761e+00
    -- -6.1708e+03  -1.0271e-13  -1.2493e+03  -9.8508e+00
    -- -1.1988e+04   6.5719e-13  -2.4101e+03  -2.0000e+01
    -- -1254.60268      0.00000   -262.86535     -1.41421
    -- -594.93643     0.00000  -120.19134    -0.69877
    -- -4.0224e+03  -4.1173e-14  -8.1423e+02  -6.3246e+00
    -- -473.89193     0.00000   -95.68050    -0.50000
    -- -2.8024e+03   3.7698e-14  -5.6318e+02  -4.4610e+00
    -- -3.5647e+03   3.9998e-14  -7.1645e+02  -5.7505e+00
    -- -1.6904e+03   1.3789e-14  -3.3960e+02  -2.5798e+00
    --  -691.31621     0.00000  -138.71581    -0.88946
    -- -6.9173e+02   2.6021e-16  -1.3880e+02  -8.9016e-01
    -- -8323.72570      0.00000  -1673.31347    -13.80131
    -- -6.0041e+03  -3.2594e-14  -1.2069e+03  -9.8773e+00
    -- -4.1017e+05  -5.5525e-13  -2.1137e+05  -1.2910e+01
    if posvar>=-1 then
        k=(y[1])*(-3.8120e+03)
        m=y[2]*(-7.7162e+02)
        n=(y[3])*0
        o=y[4]*(-5.9761e+00)
    end
    if posvar>-0.5 then
        k=(y[1])*(-6.0041e+03)
        m=y[2]*(-1.2069e+03)
        n=(y[3])*0
        o=y[4]*(-9.8773e+00)
    end
    if posvar==0 then
        k=(y[1])*(-8323.72570)
        m=y[2]*(-1673.31347)
        n=(y[3])*0
        o=y[4]*(-13.80131)
    end
    -- -1.3221e+04   1.6253e-13  -2.6580e+03  -2.2086e+01
    if posvar>0 then
        
        k=(y[1])*(-1.3221e+04)
        m=y[2]*(-2.6580e+03)
        n=(y[3])*0
        o=y[4]*(-1.2910e+01)
    end
    --if (postate==1) then
    --    k=(y[1])*(-1.1988e+04)
    --    m=y[2]*(-2.4101e+03)
    --    n=(y[3])*0
    --    o=y[4]*(-2.0000e+01)
    --end
    -- -3.4686e+05  -1.6767e-12  -1.7875e+05  -1.0911e+01
    -- -4.1170e+05   5.4716e-14  -2.1216e+05  -1.2958e+01
    -- -4.1250e+05  -4.9487e-13  -2.1258e+05  -1.2984e+01
    -- -4.4802e+05   1.5288e-13  -2.3088e+05  -1.4105e+01
    -- -4.6159e+05   1.7660e-13  -2.3787e+05  -1.4533e+01
    -- -4.8857e+05  -2.0513e-13  -2.5177e+05  -1.5385e+01
    k=(y[1])*(-4.1170e+05)
    m=y[2]*(-2.1216e+05)
    n=(y[3])*0
    o=y[4]*(-1.2958e+01)
    if posvar>=4 then
        k=(y[1])*(-4.1250e+05)
        m=y[2]*(-2.1258e+05)
        n=(y[3])*0
        o=y[4]*(-1.2984e+01)
    end
    if posvar>=5 or posvar==-2 or posvar==-2.5 then
        k=(y[1])*(-4.4802e+05)
        m=y[2]*(-2.3088e+05)
        n=(y[3])*0
        o=y[4]*(-1.4105e+01)
    end
    if posvar>=10 then
        k=(y[1])*(-4.6159e+05)
        m=y[2]*(-2.3787e+05)
        n=(y[3])*0
        o=y[4]*(-1.4533e+01)
    end
    if posvar>=13 then
        k=(y[1])*(-4.8857e+05)
        m=y[2]*(-2.5177e+05)
        n=(y[3])*0
        o=y[4]*(-1.5385e+01)
    end
    if posvar==11 or posvar==12 or posvar==11.5 then
        k=(y[1])*(-4.4802e+05)
        m=y[2]*(-2.3088e+05)
        n=(y[3])*0
        o=y[4]*(-1.4105e+01)
    end
    return(k+m+n+o)
end


function coroutineMain()
    local xml =[[<ui title="DeliveryBikeChassis, sensor display" closeable="false" placement="relative" position="50,-50" layout="grid">
            <label text=""/>
            <checkbox id="1" enabled="false" text="" style="* {font-size: 20px; font-weight: bold; margin-left: 20px; margin-right: 20px;}"/>
            <checkbox id="2" enabled="false" text="" style="* {font-size: 20px; font-weight: bold; margin-left: 20px; margin-right: 20px;}"/>
            <checkbox id="3" enabled="false" text="" style="* {font-size: 20px; font-weight: bold; margin-left: 20px; margin-right: 20px;}"/>
    </ui>]]
    ui=simUI.create(xml)
    objectHandle=sim.getObject('.')
    joint=sim.getObject("./ReactionWheelMotor")
    rm=sim.getObject("./RearMotor")
    fm=sim.getObject("./FrontMotor")
    sim.setJointTargetVelocity(rm,5)
    rj=sim.getObject("./Revolute_joint")
    leftSensor=sim.getObject("./left")
    middleSensor=sim.getObject("./mid")
    rightSensor=sim.getObject("./right")
    moi=0.5
    dt3=0
    rev=0
    aw2=0
    t1=0
    crt=360
    i=1
    previousSimulationTime=sim.getSimulationTime()
    sim.setThreadSwitchTiming(99)
    prevel=7
    angchange=0
    --print("time,VehicleAngle,AngularVehicleVelocity,LinearVehiclevelocity,WheelVelocity")
    rmvel=0
    rjang=0
    rjangs=0
    turnangle=45
    turn=0
    postate=0
    posvar=-1
    vari1=0
    revmode=0
    revvel=1
    revvar=0
    while true do 
        accel=1
        turndeccel=1
        turnangle=45
        if posvar==-1 then
            defaultvel=3.5
        end
        if posvar==-0.5 then
            defaultvel=3.5
            accel=0.001
        end
        if posvar==0 then
            defaultvel=3.19
            --accel=0.091125125
            accel=0
            --defaultvel=3.25
        end
        if posvar==2 then 
            defaultvel=6
            
        end
        if posvar==2.5 then 
            defaultvel=4.5
            
        end
        if posvar==2.75 then 
            defaultvel=3
            accel=0
            
        end
        if posvar==3 then
            defaultvel=3.75
            accel=-0.0001
            
        end
        if posvar==4 then
            defaultvel=3.19
            accel=0.025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.5
            
        end
        if posvar==5 then
            defaultvel=3.175
            accel=0.025
            --defaultvel=2.5
            --accel=1
            turndeccel=0.725
            --turndeccel=0.5
            
        end
        if posvar==6 then
            defaultvel=3
            accel=0.025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8
            
        end
        if posvar==6.5 then
            defaultvel=2.5
            accel=0.025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8
            
        end
        if posvar==6.75 then
            defaultvel=2.5
            accel=0.035
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8
            
        end
        if posvar==7 then
            defaultvel=2.25
            accel=0.035
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8
            
        end
        if posvar==-2.5 then
            defaultvel=2.5
            accel=0.035
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8
            
        end
        if posvar==-2 then
            defaultvel=2.125
            accel=0.02125
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            turnangle=50
        end
        if posvar==8 then
            defaultvel=1.65
            accel=0.015
            --defaultvel=2.5
            --accel=0
            turndeccel=0.845
            turnangle=49
        end
        if posvar==9 then
            defaultvel=4.5
            
        end
        if posvar==10 then
            defaultvel=2.75
            accel=0.025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.5
            
        end
        if posvar==10.5 then
            defaultvel=2.725
            accel=0.01225
            --defaultvel=2.5
            --accel=0
            turndeccel=0.75
            
        end
        if posvar==11 then
            defaultvel=3.1725
            accel=0.0225
            --defaultvel=2.5
            --accel=1
            turndeccel=0.7325
            --turndeccel=0.5
            
        end
        if posvar==11.5 then
            defaultvel=2.45
            accel=0.1
            --defaultvel=2.5
            --accel=1
            turndeccel=0.8
            --turndeccel=0.5
            --turnangle=45.5
            
        end
        if posvar==12 then
            defaultvel=2.525
            accel=0.02025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            turnangle=49.35
        end
        if posvar==12.5 then
            defaultvel=-1.25
            accel=-0.03125
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            turnangle=49
        end
        if posvar==13.5 then
            defaultvel=-1.25
            accel=-0.03125
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            turnangle=49
        end
        if posvar==13 then
            defaultvel=2.525
            accel=-0.002
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            turnangle=49.35
        end
        if posvar==15 then
            defaultvel=2.5
        end
        if posvar==16 then
            defaultvel=2.75
            accel=0.025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.5
            
        end
        if posvar==14 then
            defaultvel=1.85
            accel=0.02025
            --defaultvel=2.5
            --accel=0
            turndeccel=0.8025
            
        end
        if posvar==13.5 then
            if revmode==1 then
                defaultvel=-revvel
            else
                defaultvel=revvel
            end
        end
        if posvar==12.5 then
            if revmode==1 then
                defaultvel=-revvel
            else
                defaultvel=revvel
            end
        end
        dt2=sim.getSimulationTime()
        if dt2%4==0 then
            i=-1*i
        end
        rjpos=sim.getJointPosition(rj)
        
        --sim.setJointTargetVelocity(rj,(0.05)*i)
        --print(i)
        
        time=dt2-dt3
        mx=sim.getJointVelocity(joint,-1)      
        r=sim.getObjectOrientation(objectHandle,-1)
        ro=sim.getObjectOrientation(objectHandle,-1)
        rp=sim.getObjectPosition(objectHandle,-1)
        rvelo=sim.getJointVelocity(rm)
        --if 
        --t2=r[1]
        --if (rp[1]<-20.85) then
        --    t2=-r[2]
        --end
        --if ro[1] > 0 then
        --    t2=math.sqrt((r[1]*r[1])+(r[2]*r[2]))
        --else
        --    t2=-math.sqrt((r[1]*r[1])+(r[2]*r[2]))
        --end
        t2=r[1]+r[2]
        tvar=0
        if (r[3]>-0.15 and r[3]<0.15) then
            --or (r[3]>3 and r[3]<3.15) or (r[3]<-3 and r[3]>-3.15)
            t2=r[1]
            tvar=1
        end
        if (r[3]>0.15 and r[3]<1.35) then
            t2=r[1]+r[2]
            tvar=2
        end
        if (r[3]>1.35 and r[3]<1.65) then
            t2=r[2]
            tvar=3
        end
        if (r[3]>1.65 and r[3]<1.95) then
            t2=r[2]+r[1]
            tvar=4
        end
        if (r[3]>1.95 and r[3]<3.15) or (r[3]>-3.15 and r[3]<-3) then
            t2=-r[1]
            tvar=5
        end
        if (r[3]>-3 and r[3]<-2.58) then
            --(r[3]>-3 and r[3]<-1.845)
            t2=-r[1]
            tvar=6
        end 
        if (r[3]>-2.58 and r[3]<-1.9) then
            --(r[3]>-1.845 and r[3]<-1.825)
            t2=-r[1]
            tvar=7
        end
        if (r[3]>-1.9 and r[3]<-1.65) then
            --(r[3]>-1.845 and r[3]<-1.825)
            t2=-r[1]-r[2]
            tvar=7.5
        end
        
        if (r[3]>-1.65 and r[3]<-1.35) then
            t2=-r[2]
            tvar=8
        end
        if (r[3]>-1.35 and r[3]<-0.15) then
            t2=-r[1]
            tvar=9
        end
        if posvar==6 and (r[3]>-2.58 and r[3]<-1.95) then
            t2=-r[1]
            tvar=7
        end
        if posvar==6 and (r[3]>-1.95 and r[3]<-1.65) then
            t2=-r[2]-r[1]
            tvar=8
        end
        
        if posvar==6.5 and (r[3]>-2.58 and r[3]<-2.175) then
            t2=-r[2]
            tvar=7
        end
        if posvar==6.5 and (r[3]>-2.175 and r[3]<-1.65) then
            t2=r[1]-r[2]
            tvar=8
        end
        if posvar==6.5 and (r[3]>-1.65 and r[3]<-1.096) then
            t2=-r[2]
            tvar=8.25
        end
        if posvar==6.5 and (r[3]>-1 and r[3]<-1.096) then
            t2=r[1]-r[2]
            tvar=8.5
        end
        if posvar==6.5 and (r[3]>-1.096 and r[3]<-0.15) then
            t2=r[1]
            tvar=9
        end
        
        
        if posvar==6.75 and (r[3]>-2.58 and r[3]<-2.175) then
            t2=-r[2]
            tvar=7
        end
        if posvar==6.75 and (r[3]>-2.175 and r[3]<-1.65) then
            t2=r[1]-r[2]
            tvar=8
        end
        if posvar==6.75 and (r[3]>-1.65 and r[3]<-1.35) then
            t2=-r[2]
            tvar=8.25
        end
        if posvar==6.75 and (r[3]>-1 and r[3]<-1) then
            t2=r[1]-r[2]
            tvar=8.5
        end
        if posvar==6.75 and (r[3]>-1.35 and r[3]<-0.62) then
            t2=r[1]-r[2]
            tvar=9
        end
        if posvar==6.75 and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end
        
        if posvar==7 and (r[3]>-2.95 and r[3]<-1.35) then
            t2=-r[2]
            tvar=8
        end
        if posvar==7 and (r[3]>-2.14 and r[3]<-2.14) then
            --(r[3]>-2.175 and r[3]<-1.65)
            t2=r[2]+r[1]
            tvar=8.25
        end
        if posvar==7 and (r[3]>-2.58 and r[3]<-2.58) then
            t2=-r[1]-r[2]
            tvar=7
        end
        if posvar==7 and (r[3]>-3 and r[3]<-2.95) then
            --(r[3]>-3 and r[3]<-1.845)
            t2=-r[1]
            tvar=6
        end
        if posvar==7 and (r[3]>-1.35 and r[3]<-0.62) then
            t2=r[1]-r[2]
            tvar=9
        end
        if posvar==7 and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end
        if posvar==-2  and (r[3]>-2.58 and r[3]<-1.84) then
            --(r[3]>-2.58 and r[3]<-1.85)
            t2=-r[1]
            tvar=7
        end
        if posvar==-2  and (r[3]>-1.84 and r[3]<-1.65) then
            --(r[3]>-1.91 and r[3]<-1.65)
            t2=-r[2]-r[1]
            tvar=7.5
        end
        if posvar==-2  and (r[3]>-1.65 and r[3]<-1) then
            t2=-r[2]
            tvar=8
        end
        if posvar==-2  and (r[3]>-1 and r[3]<-0.15) then
            t2=r[1]
            tvar=9
        end
        if posvar==-2  and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end
        
        if posvar==8 and (r[3]>1.35 and r[3]<1.75) then
            t2=r[2]
            tvar=3
        end
        --if posvar==8 and (r[3]>2.05 and r[3]<2.05) then
            --t2=r[2]+r[1]
            --tvar=4
        --end
        if posvar==8 and (r[3]>1.75 and r[3]<3.15) or (r[3]>-3.15 and r[3]<-3) then
            t2=-r[1]
            tvar=5
        end
        if posvar==10.5 and (r[3]>2.855 and r[3]<3.15)  then
            t2=-r[1]+(r[2]*0.1135)
            tvar=5.5
        end
        if (posvar==11 or posvar==11.5)  and (r[3]>-2.58 and r[3]<-1.85) then
            --(r[3]>-2.58 and r[3]<-1.85)
            t2=-r[1]
            tvar=7
        end
        if (posvar==11 or posvar==11.5)  and (r[3]>-1.75 and r[3]<-1.65) then
            --(r[3]>-1.91 and r[3]<-1.65)
            t2=-r[2]-r[1]
            tvar=7.5
        end
        if (posvar==11 or posvar==12 or posvar==11.5)  and (r[3]>-1.75 and r[3]<-1.75) then
            t2=-r[2]*0.69
            tvar=8.1
        end
        if (posvar==11 or posvar==12 or posvar==11.5)  and (r[3]>-1.75 and r[3]<-1) then
            t2=-r[2]
            tvar=8
        end
        if (posvar==12 or posvar==13) and (r[3]>-1.65 and r[3]<-1) then
            t2=-r[2]
            tvar=8
        end
        if (posvar==12 or posvar==13)  and (r[3]>-1 and r[3]<-0.15) then
            t2=r[1]
            tvar=9
        end
        if (posvar==12 or posvar==13)  and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end
        if (posvar==13.5 or posvar==12.5)  and (r[3]>-2.58 and r[3]<-1.84) then
            --(r[3]>-2.58 and r[3]<-1.85)
            t2=-r[1]
            tvar=7
        end
        if (posvar==13.5 or posvar==12.5)  and (r[3]>-1.84 and r[3]<-1.65) then
            --(r[3]>-1.91 and r[3]<-1.65)
            t2=-r[2]-r[1]
            tvar=7.5
        end
        if (posvar==13.5 or posvar==12.5)  and (r[3]>-1.65 and r[3]<-1) then
            t2=-r[2]
            tvar=8
        end
        if (posvar==13.5 or posvar==12.5) and (r[3]>-1 and r[3]<-0.15) then
            t2=r[1]
            tvar=9
        end
        if (posvar==13.5 or posvar==12.5) and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end

        if posvar==13.5 and revmode==2 and (r[3]>0.15 and r[3]<1.35) then
            t2=r[1]+r[2]
            tvar=2
        end
        if posvar==13.5 and revmode==2 and (r[3]>1.35 and r[3]<1.65) then
            t2=r[2]
            tvar=3
        end
        if (posvar==15 or posvar==15.15 or posvar==15.2 or posvar==15.25) and(r[3]>-0.5 and r[3]<0.15) then
            --or (r[3]>3 and r[3]<3.15) or (r[3]<-3 and r[3]>-3.15)
            t2=r[1]-(r[2]*0.135)
            tvar=1
        end
        if posvar==16 and (r[3]>-0.5 and r[3]<0.15) then
            t2=r[1]-r[2]
            tvar=1
        end
        if posvar==16 and (r[3]>-2.58 and r[3]<-2.175) then
            t2=-r[2]
            tvar=7
        end
        if posvar==16 and (r[3]>-2.175 and r[3]<-1.65) then
            t2=r[1]-r[2]
            tvar=8
        end
        if posvar==16 and (r[3]>-1.65 and r[3]<-1.35) then
            t2=-r[2]
            tvar=8.25
        end
        if posvar==16 and (r[3]>-1 and r[3]<-1) then
            t2=r[1]-r[2]
            tvar=8.5
        end
        if posvar==16 and (r[3]>-1.35 and r[3]<-0.62) then
            t2=r[1]-r[2]
            tvar=9
        end
        if posvar==16 and (r[3]>-0.62 and r[3]<-0.15) then
            t2=r[1]
            tvar=9.5
        end
        
        if mx<0 then
            new=mx*time*60
            rev=rev+new
        end
        aw=((time*60)*mx)
    
        aw1=2*aw-rev
        if aw1>aw then
            aw1=aw1-360
        end
        while aw1>360 do
            aw1=aw1-crt
        end
        
        
        tp=t2*(math.pi/180)
        aw_vel=mx*(math.pi/180)
        angvelo=((t2-t1)/(dt2))--*(math.pi/180)

        if aw1>360 then
            aw1=aw1-crt
        end
        awn=aw1*(math.pi/180)
        -- y=0.24x^{3}
        --t5=t2-((0.375*rjpos*rjpos*rjpos))
        if posvar<4 then
            leanvar=0.2125
        end
        if posvar>=4 then
            leanvar=0.053125
        end
        if posvar==5 then
            --leanvar=0.053125
            leanvar=0.078125
        end
        if posvar==11 then
            --leanvar=0.053125
            leanvar=0.053125
        end
        if posvar==11.5 then
            leanvar=0.21
            --leanvar=0.08229375
        end
        if posvar==6 then
            --leanvar=0.053125
            leanvar=0.053125
        end
        if posvar==6.5 or posvar==6.75 then
            --leanvar=0.0864625
            leanvar=0.2125
        end
        if posvar==7 then
            --leanvar=0.0864625
            leanvar=0.2125
        end
        if posvar==8 then
            --leanvar=0.053125
            leanvar=0.315
        end
        if revmode==1 then
            leanvar=0
        end
        t5=t2-((leanvar*rvelo*rvelo*rjpos*rjpos*rjpos))
        y={t5,angvelo,awn,aw_vel}

        t1=tp
        u=matmul()  
        
        alpha=u/moi
        f=(y[4]+alpha*(dt2-dt3))
        maxvel=7.1740e+02
        k=f*(254/maxvel)
        aw2=aw1
        dt1=dt2
        dt3=dt2-1
        r1=sim.getJointVelocity(joint)
        sim.setJointTargetVelocity(joint,f)
        --print(r1-f)
        sensorReading={}
        sensorReading[1]=(sim.readVisionSensor(leftSensor)==1)
        sensorReading[2]=(sim.readVisionSensor(middleSensor)==1)
        sensorReading[3]=(sim.readVisionSensor(rightSensor)==1)
        --print(f)
        
        prevel=(sim.getJointVelocity(rm))
        
        if (sensorReading[3]==false and sensorReading[2]==false and sensorReading[1]==true) and revmode==0 then  
                
                angchange=angchange-turnangle*math.pi/180
                rjang=rjang-turnangle*math.pi/180
                rmvel=defaultvel-((defaultvel-0.485)^math.abs(rjpos*turndeccel))
                --rmvel=defaultvel
                --sim.setJointTargetPosition(rj,-28.78*math.pi/180)
                --sim.setJointTargetVelocity(rm,prevel-3.06)
        end
        if (sensorReading[3]==true and sensorReading[2]==false and sensorReading[1]==true) and revmode==0 then
            
            rjang=rjang-(angchange)
            if (rjpos<0.3 and rjpos>-0.3) then
                rmvel=defaultvel
            else 
                rmvel=prevel
            end
            --sim.setJointTargetPosition(rj,-(1.5*angchange))
            angchange=0
            if (angvelo<0.0005 and angvelo>-0.0005) then
                rmvel=prevel+(0.03125*accel)
                --sim.setJointTargetVelocity(rm,prevel)

            end
            if (rp[1]>16.8 and r[1]<19.5 and rp[2]>10.69 and rp[2]<12.2) then
                rmvel=prevel
            end
        end
        if (revmode==0) and (sensorReading[1]==false and sensorReading[2]==false and sensorReading[3]==true) then
                
                angchange=angchange+turnangle*math.pi/180
                rjang=rjang+turnangle*math.pi/180
                rmvel=defaultvel-((defaultvel-0.485)^math.abs(rjpos*turndeccel))
                --rmvel=defaultvel
                --sim.setJointTargetPosition(rj,28.78*math.pi/180)
                --sim.setJointTargetVelocity(rm,prevel-3.06)
        end
        
        if (rp[1]>-7.705 and rp[1]<-6.8) and (rp[2]<11 and rp[2]>10.25) then
            --(rp[1]>-7.73165 and rp[1]<-6.8)
            if vari1>-49 then
                rjang=rjangs-0.09*math.pi/180
                angchange=angchange-0.09*math.pi/180
                vari1=vari1-0.09
            else
                rjang=-49*math.pi/180
            end
            rjangs=rjang
            rmvel=defaultvel-((defaultvel-0.485)^math.abs(rjpos*turndeccel))
        end
        --(rp[1]<16.9 and r[1]>14 and rp[2]>-1.9 and rp[2]<0)
        if (sensorReading[3]==false and sensorReading[2]==false and sensorReading[1]==false) and (posvar==12 or posvar==16) then
                --print('True')
                angchange=angchange-turnangle*math.pi/180
                rjang=rjang-turnangle*math.pi/180
                rmvel=defaultvel-((defaultvel-0.485)^math.abs(rjpos*turndeccel))
        end
        if (sensorReading[3]==false and sensorReading[2]==false and sensorReading[1]==false) and posvar==8 then
            rmvel=prevel
        end
        
        setLeds(display,sensorReading[1],sensorReading[2],sensorReading[3])
    
        if ((rp[1]>=-2.5)and (rp[1]<7.4)) and ((rp[2]>15) and (rp[2]<17)) then     
            --rjang=0
            --rmvel=5
            posvar=-1
        end
        if ((rp[1]>-12.4)and (rp[1]<-2.5)) and ((rp[2]>15) and (rp[2]<17)) then     
            --rjang=0
            --rmvel=5
            posvar=-0.5
        end
        if ((rp[1]<-12.4)) and ((rp[2]>15) and (rp[2]<17)) then     
            --rjang=0
            --rmvel=5
            posvar=0
        end
        --if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>9.5) and (rp[2]<10.3)) then
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>9.5) and (rp[2]<14)) then
            --rjang=0
            rmvel=4.5
            posvar=1
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>5.45) and (rp[2]<9.5)) then     
            --rjang=0
            --rmvel=5
            posvar=2
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>1) and (rp[2]<5.45)) then     
            --rjang=0
            --rmvel=5
            posvar=2.5
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>-2.7) and (rp[2]<1)) then     
            --rjang=0
            --rmvel=5
            posvar=2.75
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>-6.1) and (rp[2]<-2.7)) then     
            rjang=-0.01
            --rmvel=5
            posvar=3
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>-7.8) and (rp[2]<-5.9)) then     
            rjang=0
            rmvel=2
            posvar=3.5
        end
        if ((rp[1]>-22)and (rp[1]<-19)) and ((rp[2]>-15) and (rp[2]<-10.9)) then     
            --rjang=0
            --rmvel=2
            posvar=4
        end
        if ((rp[1]>-19)and (rp[1]<-14.5)) and ((rp[2]>-16) and (rp[2]<-13)) then     
            --rjang=0
            --rmvel=2
            posvar=5
        end
        if ((rp[1]>-16)and (rp[1]<-9)) and ((rp[2]>-11) and (rp[2]<-4.17)) then     
            --rjang=0
            --rmvel=2
            posvar=6
        end
        if ((rp[1]>-16)and (rp[1]<-9)) and ((rp[2]>-4.17) and (rp[2]<0.5)) then     
            --rjang=0
            --rmvel=2
            posvar=6.5
        end
        if ((rp[1]>-16)and (rp[1]<-9)) and ((rp[2]>0.5) and (rp[2]<6.9)) then     
            --rjang=0
            --rmvel=2
            posvar=6.75
        end
        if ((rp[1]>-14)and (rp[1]<-9)) and ((rp[2]>6.9) and (rp[2]<11)) then     
            --rjang=0
            --rmvel=2
            posvar=7
        end
        if ((rp[1]>-9)and (rp[1]<-6.5)) and ((rp[2]>10) and (rp[2]<11)) then     
            --rjang=0
            --rmvel=2
            posvar=8
        end
        if ((rp[1]>-7)and (rp[1]<-5)) and ((rp[2]>-10) and (rp[2]<7.2)) then     
            --rjang=0
            if posvar~=16 then
                rmvel=4.5
            end
            posvar=9
        end
        if ((rp[1]>-5)and (rp[1]<0)) and ((rp[2]>-20) and (rp[2]<-10)) then     
            --rjang=0
            --rmvel=4.5
            posvar=10
        end
        if ((rp[1]>0)and (rp[1]<7.95)) and ((rp[2]>-20) and (rp[2]<-10)) then     
            --rjang=0
            if rp[1]>7.05 then
                rjang=0
            end
            --rmvel=4.5
            posvar=10.5
        end
        --if ((rp[1]>8)and (rp[1]<7.8)) and ((rp[2]>-20) and (rp[2]<-10)) then     
            --rjang=0
            --rmvel=6.5
            --posvar=10.75
        --end
        if ((rp[1]>7.95)and (rp[1]<15)) and ((rp[2]>-20) and (rp[2]<-10)) then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=4.5
            posvar=11
        end
        if ((rp[1]>15)and (rp[1]<23)) and ((rp[2]>-20) and (rp[2]<-10)) then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=4.5
            posvar=11.5
        end
        if ((rp[1]>18)and (rp[1]<23)) and ((rp[2]>-10) and (rp[2]<-0.65)) and revmode==1 then     
            --rp[1]>7.7
            --rjang=0
            rmvel=-1.25
            posvar=12.5
        end
        if ((rp[1]>18)and (rp[1]<23)) and ((rp[2]>-10) and (rp[2]<-0.65)) and revmode==0 then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=4.5
            posvar=12
        end
        if ((rp[1]>14) and (rp[1]<17)) and ((rp[2]>-0.65) and (rp[2]<3)) and revmode==0 then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=4.5
            posvar=13
        end
        if ((rp[1]>14) and (rp[1]<17)) and ((rp[2]>-0.65) and (rp[2]<3)) and revmode==1 then     
            --rp[1]>7.7
            --rjang=0
            rmvel=-revvel
            posvar=13.5
        end
        if ((rp[1]>5) and (rp[1]<14)) and ((rp[2]>-9.4) and (rp[2]<-2.1)) and revmode==0 then     
            --rp[1]>7.7
            --rjang=0
            
            posvar=14
        end
        if ((rp[1]>14) and (rp[1]<17)) and ((rp[2]>1.25) and (rp[2]<2)) and prevel>0 then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=4.5
            rmvel=-revvel
            revmode=1
            rjangs=0
            vari1=0
            --posvar=13.5
        end
        if ((rp[1]>4.72) and (rp[1]<6.15)) and ((rp[2]>-9.7) and (rp[2]<-8.5)) and revmode==0 then     
            --rp[1]>7.7
            --rjang=0
            posvar=15
        end
        if ((rp[1]>4.2) and (rp[1]<4.72)) and ((rp[2]>-9.7) and (rp[2]<-8.5)) and revmode==0 then     
            --rp[1]>7.7
            rjang=-0.15
            rmvel=2.5
            posvar=15.15
        end
        if ((rp[1]>1.8) and (rp[1]<4)) and ((rp[2]>-9.7) and (rp[2]<-4)) and revmode==0 then     
            --rp[1]>7.7
            rjang=0
            rmvel=2.5
            posvar=15.2
        end
        if ((rp[1]>-1.5) and (rp[1]<1.8)) and ((rp[2]>-9.7) and (rp[2]<-4)) and revmode==0 then     
            --rp[1]>7.7
            --rjang=0
            rmvel=2.5
            posvar=15.25
        end
        if ((rp[1]>-6.5) and (rp[1]<-2.25)) and ((rp[2]>-9.7) and (rp[2]<-3)) and revmode==0 and (r[3]<-0.15 or r[3]>0.15)then     
            --rp[1]>7.7
            --rjang=0
            --rmvel=2.5
            posvar=16
        end
        if ((rp[1]>-6.5)and (rp[1]<10)) and ((rp[2]>10) and (rp[2]<13)) then     
            --rjang=0
            --rmvel=2
            posvar=-2.5
        end
        if ((rp[1]>10)and (rp[1]<19)) and ((rp[2]>10) and (rp[2]<13)) then     
            --rjang=0
            --rmvel=2
            posvar=-2
        end
        if revmode==1 then
            print("revmode active")
            rjang=0
            if ((rp[1]>14) and (rp[1]<17.2)) and ((rp[2]>-2.6) and (rp[2]<0.5)) then
                axl=1
                if vari1>-14 then
                    rjang=rjangs-0.1*math.pi/180
                    angchange=angchange-0.1*math.pi/180
                    vari1=vari1-0.1
                else
                    rjang=-14*math.pi/180
                end
                rjangs=rjang
                rmvel=defaultvel
            else
                if (rp[1]>17.2 and rp[2]<-2.6) then
                    revmode=2
                    rjangs=0
                end
            end
        end
        if revmode==2 then
            rjang=0
            rmvel=0.65
            if (rp[1]<16.75 and (rp[1]>13.5)) and ((rp[2]>-3) and (rp[2]<-1.5)) then
                    if revvar<16 then
                        rjang=rjangs+0.145*math.pi/180
                        angchange=angchange+0.145*math.pi/180
                        revvar=revvar+0.145
                    else
                        rjang=16*math.pi/180
                    end
            else
                if (rp[1]<13.5 and rp[2]>-2.7) then
                    revmode=0
                    rjangs=0
                end
            end
        end
        --print(rmvel)
        if posvar==1 then
            
            sim.setJointTargetVelocity(fm,rmvel)
            --print(rmvel)
            sim.setJointTargetVelocity(rm,rmvel)
        else
            sim.setJointTargetVelocity(rm,rmvel)
            sim.setJointTargetVelocity(fm,rmvel)
        end
        sim.setJointTargetPosition(rj,rjang)
        
        print(dt2,rvelo, rjang, rjpos, posvar, ro, t2, tvar)
        --print(rp, posvar)
        rjang=0
        if (rp[1]>16.8 and r[1]<19.5 and rp[2]>10.8 and rp[2]<12.2) then
            rmvel=prevel
        else 
            rmvel=defaultvel
        end
        
        prerjpos=rjpos
        
        --print()
        
        --print(o0)
    
        --print(rmvel)
        --print(angchange)
        sim.switchThread()
    end
end

-- See the user manual or the available code snippets for additional callback functions and details

    
    
    


-- See the user manual or the available code snippets for additional callback functions and details
